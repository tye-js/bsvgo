
services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:16-alpine
    container_name: bsvgo-postgres-local
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-bsvgo}
      POSTGRES_USER: ${POSTGRES_USER:-bsvgo}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-your_secure_password}
    volumes:
      - postgres_local_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - bsvgo-local-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-bsvgo} -d ${POSTGRES_DB:-bsvgo}"]
      interval: 30s
      timeout: 10s
      retries: 3




  # Next.js 应用 (本地构建)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bsvgo-app-local
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER:-bsvgo}:${POSTGRES_PASSWORD:-your_secure_password}@postgres:5432/${POSTGRES_DB:-bsvgo}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-your_nextauth_secret}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bsvgo-local-network

volumes:
  postgres_local_data:
    driver: local

networks:
  bsvgo-local-network:
    driver: bridge
